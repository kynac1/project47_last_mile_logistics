filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) + labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off")
# mtext(side = 2, line = 3, 'futile_count_threshold')
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) + labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position ="top middle")
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) + labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position ="top")
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) + labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position = c(1, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) + labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.3, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
# labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
# labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1.2))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
# labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) + labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) +
#labs(tag = "Number of Collection Points") +
coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
View(number_of_packages_vs_days)
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) +
#labs(tag = "Number of Collection Points") +
theme(panel.spacing = unit(2, "lines"))
# coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
View(do)
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points) +
#labs(tag = "Number of Collection Points") +
# theme(panel.spacing = unit(1, "lines"))
# coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points)
#labs(tag = "Number of Collection Points") +
# theme(panel.spacing = unit(1, "lines"))
# coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
# number of packages vs days by different collection capacity
data %>%
filter(collection_capacity!= 50) %>%
#filter(dist_threshold == 20000)%>%
filter(day<40) %>%
ggplot(aes(x=day, y=number_of_packages, group = futile_count_threshold, color =  futile_count_threshold)) +
geom_point(shape=16, alpha = 0.8) +
geom_smooth(method= lm, size = 0.5, se = F ) +
# labs(title = "Number of Packages over Days by Collection Points") +
facet_grid( dist_threshold ~ num_of_collection_points)
#labs(tag = "Number of Collection Points") +
# theme(panel.spacing = unit(1, "lines"))
# coord_cartesian(clip = "off") +theme(plot.tag.position = c(0.4, 1))
# mtext(side = 2, line = 3, 'futile_count_threshold')+
x = 1:10
y <- function(x){ 1-e^(-x)}
x = 1:10
y <- function(x){ 1-e^(-x)}
y
number_of_days = 1:10
collect <- function(x){ 1-e^(-x)}
probability_of_collection = collect(x)
number_of_days = 1:10
collect <- function(x){ 1-exp^(-x)}
probability_of_collection = collect(x)
number_of_days = 1:10
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
number_of_days = 1:10
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
ggplot(aes(x =number_of_days, y = probability_of_collection ))
number_of_days = 1:10
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
plot(aes(x =number_of_days, y = probability_of_collection ))
number_of_days = 1:10
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
plot(x =number_of_days, y = probability_of_collection )
number_of_days = 1:10
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
plot(x =number_of_days, y = probability_of_collection, type = "l", main = "customer collection distribution" )
number_of_days = 1:10:0.5
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
plot(x =number_of_days, y = probability_of_collection, type = "l", main = "customer collection distribution" )
number_of_days = seq(0, 10, by=0.5)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(x)
plot(x =number_of_days, y = probability_of_collection, type = "l", main = "customer collection distribution" )
number_of_days = seq(0, 10, by=0.5)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, type = "l", main = "customer collection distribution" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, type = "l", main = "customer collection distribution" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, type = "l", main = "Collection Probability over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, ann=FALSE,type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, xaxt='n', type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, ann=FALSE,type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, ann=FALSE, frame.plot=FALSE, type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection,  frame.plot=FALSE, type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, xaxt='n', frame.plot=FALSE, type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, xaxt='n',  type = "l", main = "Probability of Collection over Days" )
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, xaxt='n', yaxt='n',  type = "l", main = "Probability of Collection over Days" )
frame.plot=FALSE,
number_of_days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
probability_of_collection = collect(number_of_days)
plot(x =number_of_days, y = probability_of_collection, xaxt='n', yaxt='n', frame.plot=FALSE, type = "l", main = "Probability of Collection over Days" )
frame.plot=FALSE,
Days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
Probability = collect(number_of_days)
plot(x =Days, y = Probability, xaxt='n', yaxt='n', type = "l", main = "Probability of Collection over Days" )
# frame.plot=FALSE,
Days = seq(0, 10, by=0.1)
collect <- function(x){ 1-exp(-x)}
Probability = collect(number_of_days)
plot(x =Days, y = Probability, type = "l", frame.plot=FALSE,main = "Probability of Collection over Days" )
# frame.plot=FALSE,
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer))
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b",  xlab= "Number of Collection Points",
ylab= "avg. Number of Packages", main="Effect of Number of Collection Points"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(num_of_collection_points, avg.travel_dist_per_customer,  type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
library(plotrix)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
files
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection num_of_collection_points
data$num_of_collection_points= c(rep(0,60),rep(1,60), rep(2,60), rep(3,60), rep(4,60), rep(5,60))
# data$num_of_collection_points <- factor(data$num_of_collection_points, levels = c('5km', '10km', '15km', '20km'))
data$collection_point_packages[1:60]<- 0
data$collection_point_removed_packages[1:60]<- 0
# build stats data
data1 <- data %>%
select(day, num_of_collection_points, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_collection_removed_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
data1$is_collection <- TRUE
data1$is_collection[data1$num_of_collection_points == 0] <- FALSE
data1$is_collection <- as.factor(data1$is_collection)
# data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
# data1 <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   mutate(packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer))
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b",  xlab= "Number of Collection Points",
ylab= "avg. Number of Packages", main="Effect of Number of Collection Points"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(num_of_collection_points, avg.travel_dist_per_customer,  type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer))
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b", ylim = c(0,200), xlab= "Number of Collection Points",
ylab= "avg. Number of Packages", main="Effect of Number of Collection Points"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(num_of_collection_points, avg.travel_dist_per_customer, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = num_of_collection_points)) + ggtitle("Number of Packages over Time by Number of Collection Points")
data1 %>%
ggplot() + geom_line(aes(x=day, y=travel_dist_per_customer, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_delivered_packages over time")
# data1 %>%
#   ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_undelivered_packages over time")
#
# data1 %>%
#   ggplot(aes(x=as.factor(num_of_collection_points), y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
# # combined boxplot
# p1<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_packages vs collection capcity")
# p3<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_delivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_delivered_packages vs collection num_of_collection_points")
# p4<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_undelivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_undelivered_packages vs collection num_of_collection_points")
# figure <- ggarrange(p1, p3, p4,
#                     #labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
#                     ncol = 2, nrow = 2)
# figure
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = as.factor(num_of_collection_points)) + ggtitle("Number of Packages over Time by Number of Collection Points")
data1 %>%
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = as.factor(num_of_collection_points))) + ggtitle("Number of Packages over Time by Number of Collection Points")
data1 %>%
ggplot() + geom_line(aes(x=day, y=travel_dist_per_customer, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_delivered_packages over time")
# data1 %>%
#   ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_undelivered_packages over time")
#
# data1 %>%
#   ggplot(aes(x=as.factor(num_of_collection_points), y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
# # combined boxplot
# p1<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_packages vs collection capcity")
# p3<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_delivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_delivered_packages vs collection num_of_collection_points")
# p4<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_undelivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_undelivered_packages vs collection num_of_collection_points")
# figure <- ggarrange(p1, p3, p4,
#                     #labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
#                     ncol = 2, nrow = 2)
# figure
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = as.factor(num_of_collection_points))) + ggtitle("Number of Packages over Time by Number of Collection Points")
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=travel_dist_per_customer, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_delivered_packages over time")
# data1 %>%
#   ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_undelivered_packages over time")
#
# data1 %>%
#   ggplot(aes(x=as.factor(num_of_collection_points), y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
# # combined boxplot
# p1<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_packages vs collection capcity")
# p3<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_delivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_delivered_packages vs collection num_of_collection_points")
# p4<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_undelivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_undelivered_packages vs collection num_of_collection_points")
# figure <- ggarrange(p1, p3, p4,
#                     #labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
#                     ncol = 2, nrow = 2)
# figure
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = as.factor(num_of_collection_points))) + ggtitle("With & Without Collection Points")
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=travel_dist_per_customer, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_delivered_packages over time")
# data1 %>%
#   ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_undelivered_packages over time")
#
# data1 %>%
#   ggplot(aes(x=as.factor(num_of_collection_points), y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
# # combined boxplot
# p1<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_packages vs collection capcity")
# p3<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_delivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_delivered_packages vs collection num_of_collection_points")
# p4<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_undelivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_undelivered_packages vs collection num_of_collection_points")
# figure <- ggarrange(p1, p3, p4,
#                     #labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
#                     ncol = 2, nrow = 2)
# figure
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = as.factor(num_of_collection_points))) + ggtitle("Daily Number of Packges With & Without Collection Points")
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=travel_dist_per_customer, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_delivered_packages over time")
# data1 %>%
#   ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_undelivered_packages over time")
#
# data1 %>%
#   ggplot(aes(x=as.factor(num_of_collection_points), y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
# # combined boxplot
# p1<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_packages vs collection capcity")
# p3<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_delivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_delivered_packages vs collection num_of_collection_points")
# p4<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_undelivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_undelivered_packages vs collection num_of_collection_points")
# figure <- ggarrange(p1, p3, p4,
#                     #labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
#                     ncol = 2, nrow = 2)
# figure
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group = num_of_collection_points, color = as.factor(num_of_collection_points))) + ggtitle("Daily Number of Packges - With & Without Collection Points")
data1 %>%
filter(num_of_collection_points<2)%>%
ggplot() + geom_line(aes(x=day, y=travel_dist_per_customer, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_delivered_packages over time")
# data1 %>%
#   ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =num_of_collection_points, color = num_of_collection_points)) + ggtitle("number_of_undelivered_packages over time")
#
# data1 %>%
#   ggplot(aes(x=as.factor(num_of_collection_points), y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
# # combined boxplot
# p1<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_packages vs collection capcity")
# p3<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_delivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_delivered_packages vs collection num_of_collection_points")
# p4<-data1 %>%
#   ggplot(aes(x=num_of_collection_points, y=number_of_undelivered_packages, color = num_of_collection_points)) + geom_boxplot() + ggtitle("number_of_undelivered_packages vs collection num_of_collection_points")
# figure <- ggarrange(p1, p3, p4,
#                     #labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
#                     ncol = 2, nrow = 2)
# figure
