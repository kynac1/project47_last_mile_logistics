total_collection_dist_customer = sum(collection_dist) )
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b", ylim = c(0,200), xlab= "Number of Collection Points", ylab= "avg. Number of Packages", main="Effect of Number of Collection Points"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# par(new = T)
# with(summ, plot(num_of_collection_points, total_collection_dist_customer/1000, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# abline(h=summ$ avg.travel_dist_per_customer[3], col="red3", lty=2, lwd=1)
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="green")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$  total_collection_dist_driver[3], col="red3", lty=2, lwd=1)
#
# par(new = T)
# with(data1, plot(num_of_collection_points, arrival_packages,  type="b", pch=15, col="green", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages),
avg.travel_dist_per_customer = mean(travel_dist_per_customer),
total_collection_dist_customer = sum(collection_dist) )
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b", ylim = c(0,200), xlab= "Number of Collection Points", ylab= "avg. Number of Packages", main="Effect of Number of Collection Points"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# par(new = T)
# with(summ, plot(num_of_collection_points, total_collection_dist_customer/1000, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# abline(h=summ$ avg.travel_dist_per_customer[3], col="red3", lty=2, lwd=1)
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$  total_collection_dist_driver[3], col="red3", lty=2, lwd=1)
#
# par(new = T)
# with(data1, plot(num_of_collection_points, arrival_packages,  type="b", pch=15, col="green", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages),
avg.travel_dist_per_customer = mean(travel_dist_per_customer),
total_collection_dist_customer = sum(collection_dist) )
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b", ylim = c(0,200), xlab= "Number of Collection Points", ylab= "Average Number of Packages", main="Effect of Number of Collection Points"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# par(new = T)
# with(summ, plot(num_of_collection_points, total_collection_dist_customer/1000, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# abline(h=summ$ avg.travel_dist_per_customer[3], col="red3", lty=2, lwd=1)
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$  total_collection_dist_driver[3], col="red3", lty=2, lwd=1)
#
# par(new = T)
# with(data1, plot(num_of_collection_points, arrival_packages,  type="b", pch=15, col="green", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages),
avg.travel_dist_per_customer = mean(travel_dist_per_customer),
total_collection_dist_customer = sum(collection_dist) )
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b", ylim = c(0,200), xlab= "Number of Collection Points", ylab= "Average Number of Packages", main="Effect of Number of Collection Points"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# par(new = T)
# with(summ, plot(num_of_collection_points, total_collection_dist_customer/1000, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# abline(h=summ$ avg.travel_dist_per_customer[3], col="red3", lty=2, lwd=1)
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
abline(h=summ$total_collection_dist_driver[3], col="red3", lty=2, lwd=1)
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
# abline(h=summ$  total_collection_dist_driver[3], col="red3", lty=2, lwd=1)
#
# par(new = T)
# with(data1, plot(num_of_collection_points, arrival_packages,  type="b", pch=15, col="green", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(num_of_collection_points) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -num_of_collection_points)
#
# summ_distances %>%
#   ggplot(aes(x = num_of_collection_points, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(num_of_collection_points!=0) %>%
group_by(num_of_collection_points) %>%
summarize(avg.number_of_packages = mean(number_of_packages),
avg.travel_dist_per_customer = mean(travel_dist_per_customer),
total_collection_dist_customer = sum(collection_dist) )
summ
par(mar = c(5,5,2,5))
with(summ, plot(num_of_collection_points, avg.number_of_packages, type="b", ylim = c(0,200), xlab= "Number of Collection Points", ylab= "Average Number of Packages", main="Effect of Number of Collection Points"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# par(new = T)
# with(summ, plot(num_of_collection_points, total_collection_dist_customer/1000, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# abline(h=summ$ avg.travel_dist_per_customer[3], col="red3", lty=2, lwd=1)
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
# abline(h=summ$  total_collection_dist_driver[3], col="red3", lty=2, lwd=1)
#
# par(new = T)
# with(data1, plot(num_of_collection_points, arrival_packages,  type="b", pch=15, col="green", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance per Customer (m)')
# twoord.plot(lx = summ$num_of_collection_points, ly = summ$ave.number_of_packages, rx = summ$num_of_collection_points, ry = summ$customer_distance,lylim=range(summ$ave.number_of_packages)+c(-20,10),  lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points")
# # twoord.stackplot(lx = summ$num_of_collection_points, ldata = summ$ave.number_of_packages, rx = summ$num_of_collection_points, rdata = summ$customer_distance,ltype=c("l","p"), rtype=c("l","p","o"), lylab="number_of_packages",rylab="customer_distance", xaxt = 'n', yaxt = 'n', xlab="Number of Collection Points", lcol=c("red"))
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection collection_capacity
data$collection_capacity= c(rep(10,60),rep(20,60), rep(30,60), rep(40,60), rep(50,60))
# build stats data
data1 <- data %>%
select(day, collection_capacity, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
# data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
# data1 <- data1 %>%
#   group_by(collection_capacity) %>%
#   mutate(packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "avg. Number of Packages", main="Effect of Collection Capacity"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "avg. Number of Packages", main="Effect of Collection Capacity"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
# par(new = T)
# with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "avg. Number of Packages", main="Effect of Collection Capacity"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
# par(new = T)
# with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# build stats data
data1 <- data %>%
select(day, collection_capacity, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1 <- data1 %>%
group_by(collection_capacity) %>%
mutate(packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "avg. Number of Packages", main="Effect of Collection Capacity"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
# par(new = T)
# with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
par(new = T)
with(summ, plot(num_of_collection_points,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "avg. Number of Packages", main="Effect of Collection Capacity"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
# par(new = T)
# with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
par(new = T)
with(summ, plot(collection_capacity,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "Average Number of Packages", main="Effect of Collection Capacity"))
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
# par(new = T)
# with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
par(new = T)
with(summ, plot(collection_capacity,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "Average Number of Packages", main="Effect of Collection Capacity"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
# par(new = T)
# with(summ, plot(collection_capacity, avg.travel_dist_per_customer,  type="b", ylim = c(0,4000), pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
par(new = T)
with(summ, plot(collection_capacity,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
files
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection dist_threshold
data$dist_threshold= c(rep(10000,60),rep(15000,60), rep(20000,60), rep(5000,60))
# data$dist_threshold <- factor(data$dist_threshold, levels = c('5km', '10km', '15km', '20km'))
# build stats data
data1 <- data %>%
select(day, dist_threshold, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1 <- data1 %>%
group_by(dist_threshold) %>%
mutate(packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
summ <- data1 %>%
group_by(dist_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer))
summ
par(mar = c(5,5,2,5))
with(summ, plot(dist_threshold, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Distance Threshold (m)",
ylab= "Average Number of Packages", main="Effect of Distance Threshold"))
abline(h=summ$avg.number_of_packages[2], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(dist_threshold,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
summ <- data1 %>%
group_by(dist_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer), total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(dist_threshold, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Distance Threshold (m)",
ylab= "Average Number of Packages", main="Effect of Distance Threshold"))
abline(h=summ$avg.number_of_packages[2], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(dist_threshold,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[2]/1000, col="red3", lty=2, lwd=1)
summ <- data1 %>%
group_by(dist_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer), total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(dist_threshold/1000, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Distance Threshold (km)",
ylab= "Average Number of Packages", main="Effect of Distance Threshold"))
abline(h=summ$avg.number_of_packages[2], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(dist_threshold/1000,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[2]/1000, col="red3", lty=2, lwd=1)
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
files
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection futile_count_threshold
data$futile_count_threshold= (c(rep(0,60),rep(1,60), rep(2,60), rep(3,60), rep(4,60)))
# data$futile_count_threshold <- factor(data$futile_count_threshold, levels = c('5km', '10km', '15km', '20km'))
# build stats data
data1 <- data %>%
select(day, futile_count_threshold, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
# data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
# data1 <- data1 %>%
#   group_by(futile_count_threshold) %>%
#   mutate(packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
summ <- data1 %>%
group_by(futile_count_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer), total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(futile_count_threshold, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Futile Count Threshold",
ylab= "Average Number of Packages", main="Effect of Futile Count Threshold"))
abline(h=summ$avg.number_of_packages[2], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(futile_count_threshold,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[2]/1000, col="red3", lty=2, lwd=1)
summ <- data1 %>%
group_by(futile_count_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer), total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(futile_count_threshold, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Futile Count Threshold",
ylab= "Average Number of Packages", main="Effect of Futile Count Threshold"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(futile_count_threshold,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3], col="red3", lty=2, lwd=1)
summ <- data1 %>%
group_by(futile_count_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer), total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(futile_count_threshold, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Futile Count Threshold",
ylab= "Average Number of Packages", main="Effect of Futile Count Threshold"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(futile_count_threshold,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
summ <- data1 %>%
group_by(futile_count_threshold) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer), total_collection_dist_customer = sum(collection_dist))
summ
par(mar = c(5,5,2,5))
with(summ, plot(futile_count_threshold, avg.number_of_packages, type="b",  ylim = c(0,200), xlab= "Futile Count Threshold",
ylab= "Average Number of Packages", main="Effect of Futile Count Threshold"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
# axis(side = 2, col="blue", col.axis="blue")
# mtext(side = 2, line = 3, col="blue", "avg. Number of Packages")
par(new = T)
with(summ, plot(futile_count_threshold,  total_collection_dist_customer/1000,  , ylim = c(000,max(total_collection_dist_customer/1000)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
