knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
library(plotrix)
# build stats data
data1 <- data %>%
select(day, arrival_rate, number_of_packages, number_of_vehicles, collection_dist)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
files
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection arrival_rate
data$arrival_rate= c(rep(data$number_of_packages[1], 60),rep(data$number_of_packages[1+1*60], 60), rep(data$number_of_packages[1+2*60], 60), rep(data$number_of_packages[1+3*60], 60), rep(data$number_of_packages[1+4*60],60), rep(data$number_of_packages[1+5*60],60), rep(data$number_of_packages[1+6*60],60), rep(data$number_of_packages[1+7*60],60))
# data$arrival_rate <- factor(data$arrival_rate, levels = c('5km', '10km', '15km', '20km'))
# build stats data
data1 <- data %>%
select(day, arrival_rate, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_collection_removed_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
# data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1 <- data1 %>%
group_by(arrival_rate) %>%
mutate(arrival_packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
## Distance
# different measures of packages number vs capacity
# summ_distances <- data1 %>%
#   group_by(arrival_rate) %>%
#   summarize(driver_distance = sum(distance),
#             customer_distance = sum(collection_dist)) %>%
#   gather(key = "variable", value = "value", -arrival_rate)
#
# summ_distances %>%
#   ggplot(aes(x = arrival_rate, y = value)) + geom_line(aes(color = variable)) + geom_point(aes(color = variable)) + ggtitle("Distance vs. Futile Count Threshold") #+ facet_grid( . ~ variable)  #+ scale_color_manual(values = c("darkred", "steelblue"))
summ <- data1 %>%
filter(arrival_rate!=0) %>%
group_by(arrival_rate) %>%
summarize(avg.number_of_packages = mean(number_of_packages),
avg.travel_dist_per_customer = mean(travel_dist_per_customer),
total_collection_dist_customer = sum(collection_dist),
avg.package_removal_rate = mean(number_of_collection_removed_packages)/3,
avg.package_at_collecton = mean(number_of_collection_packages)/3 )
summ
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.number_of_packages, type="b", ylim = c(0,max(avg.number_of_packages)), xlab= "Package Arrival Rate", ylab= "Average Number of Packages", main="Performance under different Arrival Rates"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
par(new = T)
with(summ, plot(arrival_rate,  total_collection_dist_customer/1000,  , ylim = c(000,max(total_collection_dist_customer/1000)+500), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
# par(new = T)
# with(summ, plot(arrival_rate, total_collection_dist_customer/1000, ylim = c(0,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'avg. Travelling Distance per Customer (m)')
# abline(h=summ$ avg.travel_dist_per_customer[3], col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Avg. Package Arrival Rate at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"))
abline(h=30, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# par(new = T)
# with(summ, plot(arrival_rate,  avg.package_removal_rate,  , ylim = c(000,max(avg.package_removal_rate)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Avg. Package Arrival Rate at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"))
abline(h=30, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# par(new = T)
# with(summ, plot(arrival_rate,  avg.package_removal_rate,  , ylim = c(000,max(avg.package_removal_rate)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Avg. Package Arrival Rate at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"))
abline(h=10, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# par(new = T)
# with(summ, plot(arrival_rate,  avg.package_removal_rate,  , ylim = c(000,max(avg.package_removal_rate)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Average Number of Packages at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"))
abline(h=10, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# par(new = T)
# with(summ, plot(arrival_rate,  avg.package_removal_rate,  , ylim = c(000,max(avg.package_removal_rate)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Avg. Number of Packages at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"))
abline(h=10, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# par(new = T)
# with(summ, plot(arrival_rate,  avg.package_removal_rate,  , ylim = c(000,max(avg.package_removal_rate)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Avg. Number of Packages at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"), cex=1.2)
abline(h=10, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# par(new = T)
# with(summ, plot(arrival_rate,  avg.package_removal_rate,  , ylim = c(000,max(avg.package_removal_rate)), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
# axis(side = 4, col="red3", col.axis="red3")
# mtext(side = 4, line = 3, col="red3", 'Average Pick-up Rate at Collection Point')
# abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
library(plotrix)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
files
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection arrival_rate
data$arrival_rate= c(rep(data$number_of_packages[1], 60),rep(data$number_of_packages[1+1*60], 60), rep(data$number_of_packages[1+2*60], 60), rep(data$number_of_packages[1+3*60], 60), rep(data$number_of_packages[1+4*60],60), rep(data$number_of_packages[1+5*60],60), rep(data$number_of_packages[1+6*60],60), rep(data$number_of_packages[1+7*60],60))
# build stats data
data1 <- data %>%
select(day, arrival_rate, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_collection_removed_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
# data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1 <- data1 %>%
group_by(arrival_rate) %>%
mutate(arrival_packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
summ <- data1 %>%
filter(arrival_rate!=0) %>%
group_by(arrival_rate) %>%
summarize(avg.number_of_packages = mean(number_of_packages),
avg.travel_dist_per_customer = mean(travel_dist_per_customer),
total_collection_dist_customer = sum(collection_dist),
avg.package_removal_rate = mean(number_of_collection_removed_packages)/3,
avg.package_at_collecton = mean(number_of_collection_packages)/3 )
summ
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.number_of_packages, type="b", ylim = c(0,max(avg.number_of_packages)), xlab= "Package Arrival Rate", ylab= "Average Number of Packages", main="Performance under different Arrival Rates"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
par(new = T)
with(summ, plot(arrival_rate,  total_collection_dist_customer/1000,  , ylim = c(000,max(total_collection_dist_customer/1000)+500), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(arrival_rate, avg.package_at_collecton, type="b",  xlab= "Customer Arrival Rate", ylab= "Avg. Number of Packages at Collection Point", main="Average Number of Packages at Collection Point over Different Arrival Rates"), cex=1.2)
abline(h=10, col="red", lty=2, lwd=1)
abline(v=50, col="blue", lty=2, lwd=1)
legend("bottomright",c("Default Collection Capacity", "Default Arrival Rate"),col=c("red","blue"), text.col=c("red","blue"), lty=c(2,2), lwd=c(1,1))
data1 %>%
ggplot() + geom_line(aes(x=day, y=number_of_packages, group =arrival_rate, color = as.factor(arrival_rate))) + ggtitle("Number of Packages over Time by Arrival Rates") + labs(y= "Number of Packages", x = "Day n", color = "Package Arrival Rate")
data1 %>%
ggplot() + geom_line(aes(x=day, y=number_of_delivered_packages, group =arrival_rate, color = arrival_rate)) + ggtitle("number_of_delivered_packages over time")
data1 %>%
ggplot() + geom_line(aes(x=day, y=number_of_undelivered_packages, group =arrival_rate, color = arrival_rate)) + ggtitle("number_of_undelivered_packages over time")
data1 %>%
ggplot(aes(x=arrival_rate, y=number_of_packages, color = arrival_rate)) + geom_boxplot() + ggtitle("Number of Packages vs Distance Threshold")
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
library(tidyverse)
library(jsonlite)
library("ggplot2")
library("reshape2")
library(ggpubr)
# load all json files into a dataframe
path <- getwd()#"./your_path"
files <- dir(path, pattern = "*.json")
# convert all json files into a dataframe
data <- files %>%
map_df(~fromJSON(file.path(path, .), flatten = TRUE))
# add column - collection collection_capacity
data$collection_capacity= c(rep(10,60),rep(20,60), rep(30,60), rep(40,60), rep(50,60))
# build stats data
data1 <- data %>%
select(day, collection_capacity, number_of_packages, number_of_vehicles, collection_dist)
# compute daily distance and time
data1$distance <- unlist(data$distances %>% map(~sum(.x)))
data1$time <- unlist(data$times %>% map(~sum(.x)))
# days
data1$delivered_package_days_taken <- unlist(data$delivered_packages.days_taken %>% map(~sum(.x)))
data1$undelivered_package_days_taken <- unlist(data$undelivered_packages.days_taken %>% map(~sum(.x)))
# packages
data1$number_of_collection_packages <- unlist(data$collection_point_packages %>% map(~sum(.x)))
data1$number_of_undelivered_packages <- unlist(data$undelivered_packages.days_taken %>% map(~length(.x))) # calculate the number of
data1$number_of_delivered_packages <- unlist(data$delivered_packages.days_taken %>% map(~length(.x))) # calculate the number of delivered packages every day
data1$travel_dist_per_customer <- data$collection_dist/data1$number_of_collection_packages
data1$travel_dist_per_customer[!is.finite(data1$travel_dist_per_customer)]<-0
data1$number_of_collection_packages <- unlist(data$collection_point_removed_packages %>% map(~sum(.x)))
data1 <- data1 %>%
group_by(collection_capacity) %>%
mutate(packages = lead(number_of_packages) - number_of_undelivered_packages) # compute packages
# plot metrics over collection capacity
summ <- data1 %>%
group_by(collection_capacity) %>%
summarize(avg.number_of_packages = mean(number_of_packages), avg.travel_dist_per_customer = mean(travel_dist_per_customer),  total_collection_dist_customer = sum(collection_dist),
# avg.package_removal_rate = mean(number_of_collection_removed_packages),
avg.package_at_collecton = median(number_of_collection_packages)/180)
summ
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.number_of_packages, type="b", ylim = c(0,200),  xlab= "Collection Capacity",
ylab= "Average Number of Packages", main="Effect of Collection Capacity"))
abline(h=summ$avg.number_of_packages[3], col="black", lty=2, lwd=1)
par(new = T)
with(summ, plot(collection_capacity,  total_collection_dist_customer/1000,  , ylim = c(000,4000), type="b", pch=15, col="red3", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4, col="red3", col.axis="red3")
mtext(side = 4, line = 3, col="red3", 'Total Travelling Distance by Customer (km)')
abline(h=summ$total_collection_dist_customer[3]/1000, col="red3", lty=2, lwd=1)
par(mar = c(5,5,2,5))
with(summ, plot(collection_capacity, avg.package_at_collecton, type="b", ylim = c(0,5), col="blue", xlab= "Collection Point Capacity",
ylab= "Avg. Package Number per Collection Point", main="Number of Packages at each Collection Point v.s. Collection Capacity"))
abline(h=summ$avg.package_at_collecton[3], col="blue", lty=2, lwd=1)
# number of packages vs days by different collection capacity
number_of_packages_vs_days <- data1 %>%
#filter(day > 20) %>%
ggplot(aes(x=day, y=number_of_packages, color = collection_capacity)) +
geom_point(shape=16, alpha = 0.8, color = 'black') +
geom_smooth(method=lm, size = 0.5, se = F ) + labs(title = "Number of Packages v.s. Days by Collection Capacity")
# Split in vertical direction
number_of_packages_vs_days + facet_grid( . ~ collection_capacity)
# different measures of packages number vs capacity
summ_packages <- data1 %>%
group_by(collection_capacity) %>%
summarise(avg.num_packages = mean(number_of_packages),
avg.num_delivered_packages = mean(number_of_delivered_packages),
avg.num_undelivered_packages= mean(number_of_undelivered_packages))
summ_packages1 <- summ_packages %>%
gather(key = "variable", value = "value", -collection_capacity)
# combined boxplot
p1<-summ_packages %>%
ggplot(aes(x=as.numeric(collection_capacity), y=avg.num_packages)) + geom_line(linetype='dotted') + geom_point()
p3<-summ_packages %>%
ggplot(aes(x=as.numeric(collection_capacity), y=avg.num_delivered_packages)) + geom_line(linetype='dotted') + geom_point()
p4<-summ_packages %>%
ggplot(aes(x=as.numeric(collection_capacity), y=avg.num_undelivered_packages)) + geom_line(linetype='dotted') + geom_point()
figure <- ggarrange(p1, p3, p4,
labs(title = "Packges v.s. capcity"),
# labels = c("delivered_package_days", "undelivered_package_days", "collection_package_days"),
ncol = 2, nrow = 2)
figure
